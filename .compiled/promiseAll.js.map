{"version":3,"sources":["../src/promiseAll.js"],"names":["newPost","title","body","posts","getPosts","setTimeout","output","forEach","post","createPost","Promise","resolve","reject","push","resolveable","promise1","promise2","promise3","promise4","console","log","promise5","promises","all","then","values","catch","e"],"mappings":";;;;AAAA;AACA,IAAMA,UAAU;AACdC,SAAO,aADO;AAEdC,QAAM;AAFQ,CAAhB;;AAKA,IAAMC,QAAQ,CACZ;AACEF,SAAO,WADT;AAEEC,QAAM;AAFR,CADY,EAKZ;AACED,SAAO,UADT;AAEEC,QAAM;AAFR,CALY,CAAd;;AAWA;AACA,SAASE,QAAT,GAAoB;AAClBC,aAAW,YAAM;AACf,QAAIC,SAAS,6BAAb;AACAH,UAAMI,OAAN,CAAc,gBAAQ;AACpBD,0BAAkBE,KAAKP,KAAvB,WAAkCO,KAAKN,IAAvC;AACD,KAFD;AAGD,GALD,EAKG,IALH;AAMD;;AAED,SAASO,UAAT,CAAoBD,IAApB,EAA0B;AACxB,SAAO,IAAIE,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCP,eAAW,YAAM;AACfF,YAAMU,IAAN,CAAWL,IAAX;;AAEA,UAAMM,cAAc,IAApB;;AAEA,UAAIA,WAAJ,EAAiB;AACfH,gBAAQ,0BAAR;AACD,OAFD,MAEO;AACLC,eAAO,iCAAP;AACD;AACF,KAVD,EAUG,IAVH;AAWD,GAZM,CAAP;AAaD;;AAED,IAAMG,WAAWL,QAAQC,OAAR,CAAgB,uBAAhB,CAAjB;AACA,IAAMK,WAAW,IAAIN,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAChDP,aAAWM,OAAX,EAAoB,IAApB,EAA0B,uCAA1B;AACD,CAFgB,CAAjB;AAGA,IAAMM,WAAW,IAAIP,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAChDP,aAAWM,OAAX,EAAoB,IAApB,EAA0B,uCAA1B;AACD,CAFgB,CAAjB;;AAIA,IAAMO,WAAW,IAAIR,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAChDO,UAAQC,GAAR,QAAmBR,MAAnB,yCAAmBA,MAAnB;AACA,MAAI,IAAJ,EAAU;AACRO,YAAQC,GAAR,CAAY,cAAZ;AACAT,YAAQF,WAAWT,OAAX,CAAR;AACD;AACD,MAAI,KAAJ,EAAW;AACTmB,YAAQC,GAAR,CAAY,cAAZ;AACAR,WAAOH,WAAWT,OAAX,CAAP;AACD;AACF,CAVgB,CAAjB;;AAYAqB,WAAW,IAAIX,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAC1CD,UAAQ,uCAAR;AACD,CAFU,CAAX;;AAIA,IAAMW,WAAW,CAACP,QAAD,EAAWC,QAAX,EAAqBC,QAArB,EAA+BC,QAA/B,EAAyCG,QAAzC,CAAjB;;AAEAX,QAAQa,GAAR,CAAYD,QAAZ,EACGE,IADH,CACQ,kBAAU;AACdpB;;AAEAe,UAAQC,GAAR,CAAY,2BAA2BK,MAAvC;AACD,CALH,EAMGC,KANH,CAMS;AAAA,SAAKP,QAAQC,GAAR,CAAY,+BAA+BO,CAA3C,CAAL;AAAA,CANT","file":"promiseAll.js","sourcesContent":["//Dealing with multiple promises with deterministic sequence\r\nconst newPost = {\r\n  title: \"post three \",\r\n  body: \"this is post three\"\r\n};\r\n\r\nconst posts = [\r\n  {\r\n    title: \"post one \",\r\n    body: \"this is post one\"\r\n  },\r\n  {\r\n    title: \"post two\",\r\n    body: \"this is post two  \"\r\n  }\r\n];\r\n\r\n// Get posts\r\nfunction getPosts() {\r\n  setTimeout(() => {\r\n    let output = \"<div> in  promise.js </div>\";\r\n    posts.forEach(post => {\r\n      output += `<li> ${post.title} : ${post.body}  </li>`;\r\n    });\r\n  }, 1000);\r\n}\r\n\r\nfunction createPost(post) {\r\n  return new Promise((resolve, reject) => {\r\n    setTimeout(() => {\r\n      posts.push(post);\r\n\r\n      const resolveable = true;\r\n\r\n      if (resolveable) {\r\n        resolve(\"Resolved from getPosts()\");\r\n      } else {\r\n        reject(\"Error : something went wrong   \");\r\n      }\r\n    }, 2000);\r\n  });\r\n}\r\n\r\nconst promise1 = Promise.resolve(\"Promise 1 is resolved\");\r\nconst promise2 = new Promise((resolve, reject) => {\r\n  setTimeout(resolve, 2000, \"Promise 2 is resolved after 2 seconds\");\r\n});\r\nconst promise3 = new Promise((resolve, reject) => {\r\n  setTimeout(resolve, 2000, \"Promise 3 is resolved after 2 seconds\");\r\n});\r\n\r\nconst promise4 = new Promise((resolve, reject) => {\r\n  console.log(typeof reject);\r\n  if (true) {\r\n    console.log(\"in Promise 4\");\r\n    resolve(createPost(newPost));\r\n  }\r\n  if (false) {\r\n    console.log(\"in Promise 4\");\r\n    reject(createPost(newPost));\r\n  }\r\n});\r\n\r\npromise5 = new Promise((resolve, reject) => {\r\n  resolve(\"Promise 5 is resolved after 2 seconds\");\r\n});\r\n\r\nconst promises = [promise1, promise2, promise3, promise4, promise5];\r\n\r\nPromise.all(promises)\r\n  .then(values => {\r\n    getPosts();\r\n\r\n    console.log(\"catpured in then :  \\n\" + values);\r\n  })\r\n  .catch(e => console.log(\"Caught Exception in catch \" + e));\r\n"]}